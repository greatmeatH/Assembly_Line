2019.4.18中午
测试人：贺隽文
测试内容：添加testbench.v模块进行指令测试
问题：1、rst时间较长，导致第一条指令无法执行
2、由于第一条指令没有执行，后续数据均没有初始化导致后续指令也无法执行
解决方法：1、尝试：修改testbench.v模块使clk延迟开始震荡时间
2、尝试：在各个模块当中加入初始化内容，通过rst信号使得可以执行后续指令，缺点：理论上第一条指令依然不可以执行

2019.4.22中午
测试人：贺隽文
测试内容：修改testbench.v及dubug
问题：1、rst时间较长，导致第一条指令无法执行
解决方法：在testbench.v的always模块中加入if判断，当rst值归0后再进行时钟翻转
问题：2、冲突处理模块当中，由于cc_WriteReg及cc_RegWrite没有初始化而为x,使得cc模块不能正常工作
尝试解决方案：2、加入初始化指令，保留0寄存器（在cc模块当中有关于0寄存器的检测代码）

2019.4.23晚及4.24晚
测试人：贺隽文
测试内容：1、修改testbench.v去除clk在rst=1时的等待
2、各个模块的输入输出方式，对于寄存器组加入初始化代码if(rst=='b1) do initial，对于其他模块将assign修改为always@(*)触发的模块，将输出全部改为reg型变量
问题：1、IF_ID模块中的Instr初始化为'h0000_0000相当于执行了一条全零指令，可能对后续进一步设计产生未知影响
解决方法：尚未解决
